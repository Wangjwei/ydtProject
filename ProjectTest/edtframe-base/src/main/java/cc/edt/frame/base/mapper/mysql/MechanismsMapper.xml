<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.edt.frame.base.dao.MechanismsDao">
    <resultMap type="cc.edt.frame.model.entity.base.Mechanisms" id="MechanismsMap">
        <id property="id" column="id"/>
        <result property="parentId" column="parent_id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="linkName" column="LINK_NAME"/>
        <result property="linkPhone" column="LINK_PHONE"/>
        <result property="addressInfo" column="ADDRESS_INFO"/>
        <result property="remark" column="REMARK"/>
        <result property="phone" column="phone"/>
        <result property="addUser" column="add_user"/>
        <result property="addTime" column="add_time"/>
        <result property="parentName" column="parent_name"/>
    </resultMap>
    <insert id="saveMechanisms">
        INSERT INTO
            base_mechanisms_info (
                id,
                parent_id,
                parent_name,
                name, code,
                LINK_NAME,
                LINK_PHONE,
                ADDRESS_INFO,
                REMARK,
                phone,
                add_user,
                add_time
            )
        VALUES
            (
                #{id},
                #{parentId},
                #{parentName},
                #{name},
                #{code},
                #{linkName},
                #{linkPhone},
                #{addressInfo},
                #{remark},
                #{phone},
                #{addUser},
                #{addTime}
            )
    </insert>
    <update id="updateMechanisms">
        UPDATE
            base_mechanisms_info
        SET
            parent_id   = #{parentId},
            parent_name =
            #{parentName},
            name        = #{name},
            code        =
            #{code},
            LINK_NAME   =
            #{linkName},
            LINK_PHONE  = #{linkPhone}, ADDRESS_INFO = #{addressInfo}, REMARK = #{remark},
            phone       =
            #{phone}
        WHERE ID = #{id}
    </update>
    <update id="updateMechanismsByParentId">
        UPDATE
            base_mechanisms_info
        SET
            parent_name = #{name}
        WHERE parent_id = #{id}
    </update>
    <delete id="deleteMechanisms">
        DELETE
        FROM
            base_mechanisms_info
        WHERE id IN (SELECT a.id
                     FROM (SELECT id
                           FROM base_mechanisms_info
                           WHERE FIND_IN_SET(id, getChildList(#{id}))) a)
    </delete>
    <select id="getMechanismsByCode" resultMap="MechanismsMap">
        SELECT
            id,
            parent_id,
            parent_name,
            name,
            code,
            LINK_NAME,
            LINK_PHONE,
            ADDRESS_INFO,
            REMARK,
            phone,
            add_user,
            add_time
        FROM
            base_mechanisms_info
        WHERE code =
              #{code}
    </select>
    <select id="getMechanismsByName" resultMap="MechanismsMap">
        SELECT
            id,
            parent_id,
            parent_name,
            name,
            code,
            LINK_NAME,
            LINK_PHONE,
            ADDRESS_INFO,
            REMARK,
            phone,
            add_user,
            add_time
        FROM
            base_mechanisms_info
        WHERE
            name = #{name}
    </select>
    <select id="getMechanismsById" resultMap="MechanismsMap">
        SELECT
            id,
            parent_id,
            parent_name,
            name,
            code,
            LINK_NAME,
            LINK_PHONE,
            ADDRESS_INFO,
            REMARK,
            phone,
            add_user,
            add_time
        FROM
            base_mechanisms_info
        WHERE id = #{id}
    </select>
    <select id="listMechanismByCondition" parameterType="MechanismsCondition"
            resultMap="MechanismsMap">
        SELECT
        m.id,
        m.parent_id,
        m.parent_name,
        m.name,
        m.code,
        m.LINK_NAME,
        m.LINK_PHONE,
        m.ADDRESS_INFO,
        m.REMARK,
        m.phone,
        m.add_time,
        u.name as add_user
        FROM
        base_mechanisms_info m
        left join base_user_info u ON m.add_user=u.id
        where m.id in (SELECT id FROM base_mechanisms_info WHERE FIND_IN_SET(id, getChildList(#{mechanismsId})))
        <if test="mechanismsName !=null">
            and m.name like CONCAT('%',#{mechanismsName},'%')
        </if>
        order by m.add_time
    </select>
    <delete id="deleteAllMechanisms">
        DELETE FROM base_mechanisms_info
    </delete>
    <insert id="saveUserMechanismsLinked">
        INSERT INTO
            base_user_mechanisms_link (user_id, mechanisms_id) VALUES
            (#{userId}, #{mechanismsId})
    </insert>
    <delete id="deleteUserMechanismsLinked">
        DELETE FROM base_user_mechanisms_link
        WHERE mechanisms_id = #{mechanismsId}
    </delete>
    <select id="listMechanismsByUserId"
            resultMap="MechanismsMap">
        SELECT
            m.id,
            m.parent_id,
            m.parent_name,
            m.name,
            m.code,
            m.LINK_NAME,
            m.LINK_PHONE,
            m.ADDRESS_INFO,
            m.REMARK,
            m.phone,
            m.add_user,
            m.add_time
        FROM
            base_mechanisms_info m
        WHERE m.id IN (SELECT mechanisms_id
                       FROM base_user_mechanisms_link
                       WHERE user_id = #{userId})
    </select>
    <select id="listMechanismsParentById"
            resultMap="MechanismsMap">
        SELECT id
        FROM base_mechanisms_info
        WHERE FIND_IN_SET(id, getParentList(#{mechanismsId}))
    </select>
    <select id="getMechanismsUserTree" resultMap="MechanismsMap">
        SELECT
            m.id,
            m.parent_id,
            m.parent_name,
            m.name,
            m.code,
            m.LINK_NAME,
            m.LINK_PHONE,
            m.ADDRESS_INFO,
            m.REMARK,
            m.phone,
            m.add_user,
            m.add_time
        FROM base_mechanisms_info m
        WHERE FIND_IN_SET(id, getChildList(#{mechanismsId}))
        ORDER BY m.CODE, m.add_time
    </select>
</mapper>
